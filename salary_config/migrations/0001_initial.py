# Generated by Django 5.2.1 on 2025-06-03 10:29

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SalaryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название конфигурации')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Конфигурация зарплат',
                'verbose_name_plural': 'Конфигурации зарплат',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalaryAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_type', models.CharField(choices=[('bonus', 'Премия'), ('penalty', 'Штраф'), ('correction', 'Корректировка')], max_length=20, verbose_name='Тип корректировки')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Положительная для премий, отрицательная для штрафов', max_digits=10, verbose_name='Сумма')),
                ('reason', models.TextField(verbose_name='Причина')),
                ('period_start', models.DateField(verbose_name='Начало периода')),
                ('period_end', models.DateField(verbose_name='Конец периода')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_adjustments', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_adjustments', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Корректировка зарплаты',
                'verbose_name_plural': 'Корректировки зарплат',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OwnerSalaryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_per_installation', models.DecimalField(decimal_places=2, default=Decimal('1500.00'), help_text='Фиксированная сумма с каждого завершенного монтажа', max_digits=8, verbose_name='Доля с каждого монтажа')),
                ('remaining_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Процент от прибыли после выплат менеджерам и монтажникам', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% от оставшейся прибыли')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner_config', to='salary_config.salaryconfig', verbose_name='Конфигурация')),
            ],
            options={
                'verbose_name': 'Настройки зарплаты владельца',
                'verbose_name_plural': 'Настройки зарплат владельцев',
            },
        ),
        migrations.CreateModel(
            name='ManagerSalaryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixed_salary', models.DecimalField(decimal_places=2, default=Decimal('30000.00'), help_text='Оклад в рублях', max_digits=10, verbose_name='Фиксированная зарплата')),
                ('bonus_per_completed_order', models.DecimalField(decimal_places=2, default=Decimal('250.00'), help_text='Сумма в рублях за каждый завершенный заказ', max_digits=8, verbose_name='Бонус за завершенный заказ')),
                ('conditioner_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('20.00'), help_text='Процент от прибыли с продажи кондиционеров', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% с прибыли от кондиционеров')),
                ('additional_services_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('30.00'), help_text='Процент от прибыли с продажи дополнительных услуг', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% с прибыли от доп. услуг')),
                ('installation_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('15.00'), help_text='Процент от прибыли с услуг монтажа', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% с прибыли от монтажа')),
                ('maintenance_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('25.00'), help_text='Процент от прибыли с услуг обслуживания', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% с прибыли от обслуживания')),
                ('dismantling_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('20.00'), help_text='Процент от прибыли с услуг демонтажа', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% с прибыли от демонтажа')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='manager_config', to='salary_config.salaryconfig', verbose_name='Конфигурация')),
            ],
            options={
                'verbose_name': 'Настройки зарплаты менеджера',
                'verbose_name_plural': 'Настройки зарплат менеджеров',
            },
        ),
        migrations.CreateModel(
            name='InstallerSalaryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_per_installation', models.DecimalField(decimal_places=2, default=Decimal('1500.00'), help_text='Фиксированная сумма за каждый завершенный монтаж', max_digits=8, verbose_name='Оплата за монтаж')),
                ('additional_services_profit_percentage', models.DecimalField(decimal_places=2, default=Decimal('30.00'), help_text='Процент от прибыли с дополнительных услуг, проданных монтажником', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% с прибыли от доп. услуг')),
                ('quality_bonus', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Дополнительный бонус за качественную работу', max_digits=8, verbose_name='Бонус за качество')),
                ('penalty_per_complaint', models.DecimalField(decimal_places=2, default=Decimal('500.00'), help_text='Штраф за обоснованную жалобу клиента', max_digits=8, verbose_name='Штраф за жалобу')),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='installer_config', to='salary_config.salaryconfig', verbose_name='Конфигурация')),
            ],
            options={
                'verbose_name': 'Настройки зарплаты монтажника',
                'verbose_name_plural': 'Настройки зарплат монтажников',
            },
        ),
        migrations.CreateModel(
            name='UserSalaryAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата назначения')),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salary_config.salaryconfig', verbose_name='Конфигурация зарплаты')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='salary_assignment', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Назначение зарплаты',
                'verbose_name_plural': 'Назначения зарплат',
            },
        ),
    ]
